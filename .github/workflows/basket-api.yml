# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Basket API CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
    - src/Services/Basket/**
    - .github/workflows/basket-api.yml

  pull_request:
    branches: [ "main" ]
    paths:
    - src/Services/Basket/**
    - .github/workflows/basket-api.yml

env:
  SERVICE: basket.api
  IMAGE: basket.api
  ServicePath: src/Services/Basket/Basket.API
    

jobs:

  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: ${{ env.ServicePath }}
      run: dotnet restore
    - name: Run Tests
      working-directory: ${{ env.ServicePath }}
      run: dotnet test --no-build --verbosity normal

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
          images: behdadkardgar/${{ env.IMAGE }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
          context: ./src/
          file: ${{ env.ServicePath }}/Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64
    
    - name: Find comment for image tags
      uses: peter-evans/find-comment@v2
      if: github.event_name == 'pull_request'
      id: fc
      with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
      
        # If PR, put image tags in the PR comments
    - name: Create or update comment for image tags
      uses: peter-evans/create-or-update-comment@v2
      if: github.event_name == 'pull_request'
      with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```
            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace